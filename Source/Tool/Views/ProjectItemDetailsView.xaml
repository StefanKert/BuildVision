<UserControl x:Class="AlekseyNagovitsyn.BuildVision.Tool.Views.ProjectItemDetailsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vsfx="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:building="clr-namespace:AlekseyNagovitsyn.BuildVision.Tool.Building"
             xmlns:extensions="clr-namespace:AlekseyNagovitsyn.BuildVision.Tool.Views.Extensions"
             xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             mc:Ignorable="d"
             Name="Control"
             Loaded="ProjectItemDetailsViewOnLoaded">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="CommonResources.xaml" />
                <ResourceDictionary Source="ScrollViewerStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <CollectionViewSource x:Key="ErrorsCollectionViewSource"
                                  Source="{Binding ElementName=Control,
                                                   Path=ProjectItem.ErrorsBox}">
                <CollectionViewSource.SortDescriptions>
                    <componentModel:SortDescription PropertyName="{x:Static building:ErrorItem.DefaultSortPropertyName}" 
                                                    Direction="Ascending"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid DataContext="{Binding ElementName=Control, Path=ProjectItem}">
        <DataGrid Name="ErrorsGrid"
                  Margin="16,0,0,0"
                  AutoGenerateColumns="False"
                  Background="Transparent"
                  BorderBrush="{DynamicResource {x:Static vsfx:VsBrushes.PanelBorderKey}}"
                  BorderThickness="0"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  GridLinesVisibility="None"
                  HeadersVisibility="None"
                  IsReadOnly="True"
                  ItemsSource="{Binding Source={StaticResource ErrorsCollectionViewSource}}"
                  SelectionMode="Single"
                  IsSynchronizedWithCurrentItem="False"
                  SelectionUnit="FullRow"
                  PreviewMouseWheel="ErrorsGridOnPreviewMouseWheel"
                  HorizontalScrollBarVisibility="Disabled">
            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="{DynamicResource {x:Static vsfx:VsColors.ToolWindowTextKey}}" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="{DynamicResource {x:Static vsfx:VsColors.ToolWindowTextKey}}" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent"/>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <!--<DataGridTextColumn Binding="{Binding Number}" CanUserResize="False" />-->
                
                <DataGridTemplateColumn CanUserResize="False" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock x:Name="LevelTextBlock" Text="●" />

                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Level}" Value="{x:Static building:ErrorLevel.Error}">
                                    <Setter TargetName="LevelTextBlock" Property="Foreground" Value="#E51400" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Level}" Value="{x:Static building:ErrorLevel.Warning}">
                                    <Setter TargetName="LevelTextBlock"  Property="Foreground" Value="DarkOrange" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Level}" Value="{x:Static building:ErrorLevel.Message}">
                                    <Setter TargetName="LevelTextBlock"  Property="Foreground" Value="DodgerBlue" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                
                <!--<DataGridTextColumn Binding="{Binding Code}" 
                                        Foreground="Gray" />-->
                
                <DataGridTextColumn Binding="{Binding Message}" 
                                    Width="*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="NoWrap"/>
                            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                            <Setter Property="extensions:TextBlockUtils.AutoTooltip" Value="True"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                
                <DataGridTextColumn Binding="{Binding FileName}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                            <Setter Property="ToolTip" Value="{Binding File}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>  
                </DataGridTextColumn>
                
                <DataGridTextColumn Binding="{Binding LineNumber, StringFormat=Ln {0}}" />
                
                <DataGridTextColumn Binding="{Binding ColumnNumber, StringFormat=Col {0}}" />
                
                <!--  <DataGridTextColumn Binding="{Binding ProjectFile}" />  -->
            </DataGrid.Columns>

            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="DataGridCell">
                                <Border Background="{TemplateBinding Panel.Background}"
                                        BorderBrush="{TemplateBinding Border.BorderBrush}"
                                        BorderThickness="0"
                                        SnapsToDevicePixels="True">
                                    <ContentPresenter Margin="1,0,0,0"
                                                      VerticalAlignment="Center"
                                                      Content="{TemplateBinding ContentControl.Content}"
                                                      ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                                      ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=IsMouseOver}" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static vsfx:VsBrushes.TitleBarActiveTextKey}}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}" />
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0,1,0,1" />
                    <Setter Property="BorderBrush" Value="{Binding Background, RelativeSource={RelativeSource self}}" />
                    <Setter Property="Cursor" Value="Hand"/>
                    
                    <EventSetter Event="PreviewMouseLeftButtonUp" Handler="ErrorsGridRowOnMouseLeftButtonUp" />

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static vsfx:VsBrushes.CommandBarMouseDownBackgroundGradientKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static vsfx:VsBrushes.TitleBarActiveTextKey}}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>

        </DataGrid>
    </Grid>

</UserControl>
